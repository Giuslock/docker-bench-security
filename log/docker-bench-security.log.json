{
  "dockerbenchsecurity": "1.3.6",
  "start": 1633375824,
  "tests": [
    {
      "id": "4",
      "desc": "Container Images and Build File",
      "results": [
        {
          "id": "4.1",
          "desc": "Ensure that a user for the container has been created",
          "result": "INFO",
          "details": "No containers running",
          "remediation": "You should ensure that the Dockerfile for each container image contains the information: USER <username or ID>. If there is no specific user created in the container base image, then make use of the useradd command to add a specific user before the USER instruction in the Dockerfile.",
          "remediation-impact": "Running as a non-root user can present challenges where you wish to bind mount volumes from the underlying host. In this case, care should be taken to ensure that the user running the contained process can read and write to the bound directory, according to their requirements."
        },
        {
          "id": "4.2",
          "desc": "Ensure that containers use only trusted base images",
          "result": "NOTE",
          "remediation": "Configure and use Docker Content trust. View the history of each Docker image to evaluate its risk, dependent on the sensitivity of the application you wish to deploy using it. Scan Docker images for vulnerabilities at regular intervals. Use the commands docker history <imageName> and docker image scan <imageName>",
          "remediation-impact": "None."
        },
        {
          "id": "4.3",
          "desc": "Ensure that unnecessary packages are not installed in the container",
          "result": "NOTE",
          "remediation": "You should not install anything within the container that is not required. You should consider using a minimal base image if you can. Some of the options available include BusyBox and Alpine. Not only can this trim your image size considerably, but there would also be fewer pieces of software which could contain vectors for attack. To review the list of the packages installed depending on which distro your image is based the commands are docker exec -i <container_id>  dpkg -l for ubuntu based, docker exec -i <container_id>  rpm -qa for RHEL, CentOS and Fedora - based containers, docker exec -i <container_id>  apk info -vv | sort for Alpine-based containers.",
          "remediation-impact": "None."
        },
        {
          "id": "4.4",
          "desc": "Ensure images are scanned and rebuilt to include security patches",
          "result": "NOTE",
          "remediation": "Images should be re-built ensuring that the latest version of the base images are used, to keep the operating system patch level at an appropriate level. Once the images have been re-built, containers should be re-started making use of the updated images.",
          "remediation-impact": "None."
        },
        {
          "id": "4.5",
          "desc": "Ensure Content trust for Docker is Enabled",
          "result": "WARN",
          "remediation": "Add DOCKER_CONTENT_TRUST variable to the /etc/environment file using command echo DOCKER_CONTENT_TRUST=1 | sudo tee -a /etc/environment.",
          "remediation-impact": "This prevents users from working with tagged images unless they contain a signature."
        },
        {
          "id": "4.6",
          "desc": "Ensure that HEALTHCHECK instructions have been added to container images",
          "result": "WARN",
          "details": "Images w/o HEALTHCHECK:  [alpine:3.13]",
          "items": [
            "[alpine:3.13]"
          ],
          "remediation": "An important security control is that of availability. Adding the HEALTHCHECK instruction to your container image ensures that the Docker engine periodically checks the running container instances against that instruction to ensure that containers are still operational. Based on the results of the health check, the Docker engine could terminate containers which are not responding correctly, and instantiate new ones.",
          "remediation-impact": "None."
        },
        {
          "id": "4.7",
          "desc": "Ensure update instructions are not used alone in the Dockerfile",
          "result": "PASS"
        },
        {
          "id": "4.8",
          "desc": "Ensure setuid and setgid permissions are removed",
          "result": "NOTE",
          "remediation": "You should allow setuid and setgid permissions only on executables which require them. You could remove these permissions at build time by adding the following command in your Dockerfile, preferably towards the end of the Dockerfile. ",
          "remediation-impact": "The above command would break all executables that depend on setuid or setgid permissions including legitimate ones. You should therefore be careful to modify the command to suit your requirements so that it does not reduce the permissions of legitimate programs excessively. Because of this, you should exercise a degree of caution and examine all processes carefully before making this type of modification in order to avoid outages."
        },
        {
          "id": "4.9",
          "desc": "Ensure that COPY is used instead of ADD in Dockerfiles",
          "result": "PASS"
        },
        {
          "id": "4.10",
          "desc": "Ensure secrets are not stored in Dockerfiles",
          "result": "NOTE",
          "remediation": "Do not store any kind of secrets within Dockerfiles. Where secrets are required during the build process, make use of a secrets management tool, such as the buildkit builder included with Docker.",
          "remediation-impact": "A proper secrets management process will be required for Docker image building."
        },
        {
          "id": "4.11",
          "desc": "Ensure only verified packages are are installed",
          "result": "NOTE",
          "remediation": "You should use a secure package distribution mechanism of your choice to ensure the authenticity of software packages.",
          "remediation-impact": "None."
        }
      ]
    },
    {
      "id": "5",
      "desc": "Container Runtime",
      "results": [
      ]
    }
  ],
  "checks": 11,
  "score": -2,
  "end": 1633375825
}